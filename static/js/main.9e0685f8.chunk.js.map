{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/StatisticsList.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","type","onClick","className","s","button","Notification","message","StatisticsList","good","neutral","bad","total","positivePercentage","list","item","Statistics","title","Section","children","container","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleIncrement","evt","feedBackType","target","textContent","toLowerCase","setState","prevState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e0685f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__ZdzPE\",\"list\":\"Statistics_list__2U4-y\",\"item\":\"Statistics_item__1cFjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1Ky0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2h2tc\",\"title\":\"Section_title__1xGk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__j0BYo\"};","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({onLeaveFeedback}) => (\r\n    <div>\r\n        <button \r\n            type=\"button\" \r\n            onClick={onLeaveFeedback}\r\n            className={s.button}\r\n        >\r\n            Good\r\n        </button>\r\n        <button \r\n            type=\"button\" \r\n            onClick={onLeaveFeedback}\r\n            className={s.button}\r\n        >\r\n            Neutral\r\n        </button>\r\n        <button \r\n            type=\"button\" \r\n            onClick={onLeaveFeedback}\r\n            className={s.button}\r\n        >\r\n            Bad\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({message}) => (\r\n    <p className={s.message}>{message}</p>\r\n);\r\n\r\nexport default Notification;","import React from 'react';\r\nimport s from './Statistics.module.css'\r\n\r\nconst StatisticsList = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <ul className={s.list}>\r\n        <li className={s.item}>Good: <span>{good}</span></li>\r\n        <li className={s.item}>Neutral: <span>{neutral}</span></li>\r\n        <li className={s.item}>Bad: <span>{bad}</span></li>\r\n        <li className={s.item}>Total: <span>{total}</span></li>\r\n        <li className={s.item}>Positive feedback: <span>{positivePercentage}%</span></li>\r\n    </ul>\r\n);\r\n\r\nexport default StatisticsList;","import React from 'react';\r\nimport Notification from '../Notification/Notification';\r\nimport StatisticsList from './StatisticsList';\r\nimport s from './Statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div>\r\n        <h2 className={s.title}>Statistics</h2>\r\n        {total === 0 \r\n            ? <Notification message=\"No feedback given\" /> \r\n            : <StatisticsList good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({title, children}) => (\r\n    <div className={s.container}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n    </div>\r\n);\r\n\r\nexport default Section;","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  countTotalFeedback = () => {\n    return (this.state.good + this.state.neutral + this.state.bad)\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  handleIncrement = (evt) => {\n      const feedBackType = evt.target.textContent.toLowerCase();\n      if(feedBackType === 'good') {\n        this.setState((prevState) => ({\n            good: prevState.good + 1,\n        }));\n\n      } else if(feedBackType === 'neutral') {\n        this.setState((prevState) => ({\n            neutral: prevState.neutral + 1,\n        }));\n\n      } else if (feedBackType === 'bad') {\n        this.setState((prevState) => ({\n            bad: prevState.bad + 1,\n        }));\n      };\n  };\n\n  render() {\n    const {good, neutral, bad} = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n        <>\n        <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={this.handleIncrement} />\n        <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\n        </Section>\n        </>\n    )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}